trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
# TODO: Move Build and Tests to separate ymll files
stages:
  - stage: Build_and_Test
    displayName: 'Build_and_Tests'
    jobs:
      - job: Build_and_Test_Job
        displayName: 'Build and run Unit Tests'
        steps:
        - task: UseDotNet@2
          displayName: 'Install .NET SDK'
          inputs:
            packageType: 'sdk'
            version: '8.x'

        - task: NuGetToolInstaller@1
          displayName: 'Install NuGet'

        - task: PowerShell@2
          displayName: 'Replace tokens in nuget.azure.config'
          env:
            GITHUB_USER_NAME: $(GITHUB_USER_NAME)
            GITHUB_READ_PACKAGE_TOKEN: $(GITHUB_READ_PACKAGE_TOKEN)
          inputs:
            targetType: 'inline'
            script: |
              (Get-Content -Path configs/nuget.azure.config) `
                -replace '\$env:GITHUB_USER_NAME', $env:GITHUB_USER_NAME `
                -replace '\$env:GITHUB_READ_PACKAGE_TOKEN', $env:GITHUB_READ_PACKAGE_TOKEN | `
                Set-Content -Path configs/nuget.azure.config

        - task: NuGetCommand@2
          displayName: 'Restore NuGet Packages'
          inputs:
            command: 'restore'
            restoreSolution: '**/*.sln'
            feedsToUse: 'config'
            nugetConfigPath: 'configs/nuget.azure.config'

        - task: VSBuild@1
          displayName: 'Build Solution'
          inputs:
            solution: '**/*.sln'
            platform: 'Any CPU'
            configuration: '$(buildConfiguration)'

        - task: VSTest@3
          displayName: 'Run Unit Tests'
          inputs:           
            testSelector: 'testAssemblies'
            testAssemblyVer2: |
              **\*UnitTests*.dll
              !**\*TestAdapter.dll
              !**\obj\**            
            codeCoverageEnabled: true
            searchFolder: '$(System.DefaultWorkingDirectory)'

        - task: PublishTestResults@2
          displayName: 'Publish Test Results'
          inputs:
            testResultsFiles: '**/TestResults/*.trx'
            testRunTitle: 'VSTest Results'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish build artifacts'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
            ArtifactName: 'app'
            publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Build_and_Test
    condition: succeeded('Build_and_Test')
    jobs:
    - deployment: DeployToAzure
      displayName: 'Deploy to Azure WebApp'
      environment: kinodev-live
      strategy:
        runOnce:
          deploy:    
            steps:
            - task: DownloadBuildArtifacts@1
              displayName: 'Download build artifacts'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'app'
                downloadPath: '$(System.ArtifactsDirectory)'
                
            - task: AzureWebApp@1
              displayName: 'Deploy to Azure Web App'
              inputs:
                azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
                appType: 'webApp'
                appName: '$(webAppName)'
                package: '$(System.ArtifactsDirectory)/app/*.zip'
                deploymentMethod: 'auto'
